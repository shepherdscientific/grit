/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef , useState} from 'react'
import { useGLTF } from '@react-three/drei'

export default function Model({ ...props }) {
  const group = useRef()
  const { nodes, materials } = useGLTF('/gri.glb')
  const [hovered1, setHover1] = useState(false)
  const [hovered2, setHover2] = useState(false)
  const [active1, setActive1] = useState(false)  
  const [active2, setActive2] = useState(false)  
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh geometry={nodes.Text003.geometry}
            material={materials['Material.001']} 
            rotation={[Math.PI / 2, 0, 0]}
            position={[0 , .27, 0 ]}
            scale={active1 ? 1.02 : 1}
            onClick={(event) => setActive1(!active1)}      
            onPointerOver={(event) => setHover1(true)}
            onPointerOut={(event) => setHover1(false)}
      >
        <meshStandardMaterial color={hovered1 ? 'yellow' : 'grey'} />
      </mesh>
      <mesh geometry={nodes.Text004.geometry} 
            material={materials['Material.003']} 
            rotation={[Math.PI / 2, 0, 0]}
            scale={active2 ? 1.02 : 1}
            onClick={(event) => setActive2(!active2)}
            onPointerOver={(event) => setHover2(true)}
            onPointerOut={(event) => setHover2(false)}
      >
        <meshStandardMaterial color={hovered2 ? 'yellow' : 'grey'} />
      </mesh>      
    </group>
  )
}

useGLTF.preload('/gri.glb')
